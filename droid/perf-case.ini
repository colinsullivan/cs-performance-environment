# INPUTS:
#  I1: [v1p]
#  I2: [v2p]

# OUTPUTS:
#  O1: [v1b] v1 bend
#  O2: [v2b] v2 bend

# GATES ON G8 1:
#  G1.1: [v1g] v1 gate
#  G1.2: [v2g] v2 gate

# CONTROLLER 1:
#  B1.1: [dir] pitch bend dir
#  B1.8: [v1+v2] group v1 + v2 switch

# CONTROLLER 2:
#  P2.1: [v1 prob] v1 bend probability
#  P2.2: [v2 prob] v2 bend probability
#  P2.3: [time] bender time
#  P2.4: [amt +-] bender amount (bipolar)

# CONTROLLER 3:
#  B3.1: [xpose 5th] global transpose 5th
#  B3.2: [xpose 2oct] global transpose 2 octaves

# CONTROLLER 4:
#  P4.1: [xpose] global transpose

[p2b8]
[p10]
[p2b8]
[p10]

# -------------------------------------------------
# v1 pitch bender
# -------------------------------------------------

# pitch bend envelope
[contour]
    trigger = _PROB_GATE
    level = 1
    attack = _TIME_CTRL
    hold = 0
    decay = 0.2
    sustain = 1
    release = 0.2
    output = _PITCH_ENV
    negated = _PITCH_ENV_INV
    startfromzero = 1

# adds incoming pitch to bend
[math]
    input1 = I1 + _GLOBAL_XPOSE_OUT
    input2 = _BEND_OUT
    sum = _SWITCH_V1P_IN

[switch]
    input1 = _PITCH_ENV
    input2 = _PITCH_ENV_INV
    offset = _PITCH_ENV_DIRECTION
    output1 = _PITCH_ENV_SWITCHED

# scales pitch bend
[math]
    input1 = _PITCH_ENV_SWITCHED
    input2 = _OCTAVE_CTRL
    product = _BEND_OUT

# passes gate through based on knob
[bernoulli]
    input = G1.1
    distribution = P2.1
    output1 = _PROB_GATE

# -------------------------------------------------
# v2 pitch bender
# -------------------------------------------------

# pitch bend envelope
[contour]
    trigger = _PROB_GATE2
    level = 1
    attack = _TIME_CTRL
    hold = 0
    decay = 0.2
    sustain = 1
    release = 0.2
    output = _PITCH_ENV2
    negated = _PITCH_ENV_INV2
    startfromzero = 1

# adds incoming pitch to bend
[math]
    input1 = I2 + _GLOBAL_XPOSE_OUT
    input2 = _BEND_OUT2
    sum = _SWITCH_V2P_IN

[switch]
    input1 = _PITCH_ENV2
    input2 = _PITCH_ENV_INV2
    offset = _PITCH_ENV_DIRECTION
    output1 = _PITCH_ENV_SWITCHED2

# scales pitch bend
[math]
    input1 = _PITCH_ENV_SWITCHED2
    input2 = _OCTAVE_CTRL
    product = _BEND_OUT2

# passes gate through based on knob
[bernoulli]
    input = G1.2
    distribution = P2.2
    output1 = _PROB_GATE2

# -------------------------------------------------
# global pitch bender controls
# -------------------------------------------------

# bender time knob
[pot]
    pot = P2.3
    outputscale = 20
    notch = 0
    output = _TIME_CTRL

# Quantizes the amount knob to octaves
[quantizer]
    input = _AMT_KNOB + 1V
    trigger = G1.1
    steps = 1
    bypass = 0
    output = _OCTAVE_CTRL

# bender amt knob, defines the number of octaves
[pot]
    pot = P2.4
    outputscale = 2V
    notch = 0
    output = _AMT_KNOB

[button]
    button = B1.1
    onvalue = 1
    offvalue = 0
    led = L1.1
    output = _PITCH_ENV_DIRECTION

# -------------------------------------------------
# global xpose
# -------------------------------------------------

[pot]
    pot = P4.1
    outputscale = _GLOBAL_XPOSE_MODE
    notch = 0.1
    bipolar = _GLOBAL_XPOSE_OUT

[buttongroup]
    button1 = B3.1
    button2 = B3.2
    value1 = 0.5V
    value2 = 2V
    led1 = L3.1
    led2 = L3.2
    output = _GLOBAL_XPOSE_MODE

# -------------------------------------------------
# global voice switching
# -------------------------------------------------

# v2 switch
[switch]
    input1 = _SWITCH_V2P_IN
    input2 = G1.2
    input3 = _SWITCH_V1P_IN
    input4 = G1.1
    offset = _V1V2_SWITCH_BUTTON
    output3 = O2
    output4 = G1.4

[button]
    button = B1.8
    onvalue = 2
    offvalue = 0
    led = L1.8
    output = _V1V2_SWITCH_BUTTON
