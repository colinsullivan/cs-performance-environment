# INPUTS:
#  I1: [v1p]
#  I2: [v2p]

# OUTPUTS:
#  O1: [v1po] v1 pitch out
#  O2: [v2po] v2 pitch out

# GATES ON X7:
#  G11: [rst out]

# GATES ON G8 1:
#  G1.1: [v1g] v1 gate
#  G1.2: [v2gi] v2 gate in
#  G1.3: [v1go]
#  G1.4: [v2go] v2 gate out
#  G1.7: [clk]
#  G1.8: [rst]

# CONTROLLER 1:
#  P1.1: [v1 prob] v1 bend probability
#  P1.2: [v2 prob] v2 bend probability
#  B1.1: [dir] pitch bend dir
#  B1.3: [xpose 5th]
#  B1.4: [xpose 2oct]
#  B1.8: [v1+v2] group v1 + v2 switch

# CONTROLLER 2:
#  P2.1: [xpose] global transpose
#  P2.3: [time] bender time
#  P2.4: [amt +-] bender amount (bipolar)

# CONTROLLER 3:
#  P3.1: [clock speed]
#  B3.1: [triplet]

[p2b8]
[p10]
[p2b8]
[p10]

# -------------------------------------------------
# v1 pitch bender
# -------------------------------------------------

# pitch bend envelope
[contour]
    trigger = _PROB_GATE
    level = 1
    attack = _TIME_CTRL
    hold = 0
    decay = 0.2
    sustain = 1
    release = 0.2
    output = _PITCH_ENV
    negated = _PITCH_ENV_INV
    startfromzero = 1

# adds incoming pitch to bend
[math]
    input1 = I1 + _GLOBAL_XPOSE_OUT
    input2 = _BEND_OUT
    sum = _SWITCH_V1P_IN

[switch]
    input1 = _PITCH_ENV
    input2 = _PITCH_ENV_INV
    offset = _PITCH_ENV_DIRECTION
    output1 = _PITCH_ENV_SWITCHED

# scales pitch bend
[math]
    input1 = _PITCH_ENV_SWITCHED
    input2 = _OCTAVE_CTRL
    product = _BEND_OUT

# passes gate through based on knob
[bernoulli]
    input = G1.1
    distribution = P1.1
    output1 = _PROB_GATE

# -------------------------------------------------
# v2 pitch bender
# -------------------------------------------------

# pitch bend envelope
[contour]
    trigger = _PROB_GATE2
    level = 1
    attack = _TIME_CTRL
    hold = 0
    decay = 0.2
    sustain = 1
    release = 0.2
    output = _PITCH_ENV2
    negated = _PITCH_ENV_INV2
    startfromzero = 1

# adds incoming pitch to bend
[math]
    input1 = I2 + _GLOBAL_XPOSE_OUT
    input2 = _BEND_OUT2
    sum = _SWITCH_V2P_IN

[switch]
    input1 = _PITCH_ENV2
    input2 = _PITCH_ENV_INV2
    offset = _PITCH_ENV_DIRECTION
    output1 = _PITCH_ENV_SWITCHED2

# scales pitch bend
[math]
    input1 = _PITCH_ENV_SWITCHED2
    input2 = _OCTAVE_CTRL
    product = _BEND_OUT2

# passes gate through based on knob
[bernoulli]
    input = G1.2
    distribution = P1.2
    output1 = _PROB_GATE2

# -------------------------------------------------
# global pitch bender controls
# -------------------------------------------------

# bender time knob
[pot]
    pot = P2.3
    outputscale = 20
    notch = 0
    output = _TIME_CTRL

# Quantizes the amount knob to octaves
[quantizer]
    input = _AMT_KNOB + 1V
    trigger = G1.1
    steps = 1
    bypass = 0
    output = _OCTAVE_CTRL

# bender amt knob, defines the number of octaves
[pot]
    pot = P2.4
    outputscale = 2V
    notch = 0
    output = _AMT_KNOB

[button]
    button = B1.1
    onvalue = 1
    offvalue = 0
    led = L1.1
    output = _PITCH_ENV_DIRECTION

# -------------------------------------------------
# global xpose
# -------------------------------------------------

[pot]
    pot = P2.1
    outputscale = _GLOBAL_XPOSE_MODE
    notch = 0.1
    bipolar = _GLOBAL_XPOSE_OUT

[buttongroup]
    button1 = B1.3
    button2 = B1.4
    value1 = 0.5V
    value2 = 2V
    led1 = L1.3
    led2 = L1.4
    output = _GLOBAL_XPOSE_MODE

# -------------------------------------------------
# global voice switching
# -------------------------------------------------

# v2 switch
[switch]
    input1 = _SWITCH_V2P_IN
    input2 = G1.2
    input3 = _SWITCH_V1P_IN
    input4 = G1.1
    offset = _V1V2_SWITCH_BUTTON
    output3 = O2
    output4 = G1.4

[switch]
    input1 = _SWITCH_V1P_IN
    input2 = G1.1
    offset = 0
    output1 = O1
    output2 = G1.3

[button]
    button = B1.8
    onvalue = 2
    offvalue = 0
    led = L1.8
    output = _V1V2_SWITCH_BUTTON

# -------------------------------------------------
# clock divider
# -------------------------------------------------

[clocktool]
    reset = G1.8
    clock = G1.7
    divide = _CLOCK_QUANT_AMT
    multiply = 1
    delay = 0
    output = _CLOCK_DIV_OUT

[pot]
    slope = 2
    pot = P3.1
    outputscale = 80
    notch = 0
    output = _CLOCK_DIV_POT

# triplet mode button
[button]
    button = B3.1
    onvalue = 1
    offvalue = 0
    led = L3.1
    output = _CLOCK_TRIPLET_MODE

# -------------------------------------------------
# synced LFO
# -------------------------------------------------

[math]
    quotient = _CLOCK_QUANT_AMT
    input1 = _CLOCK_DIV_POT
    input2 = _CLOCK_TRIPLET_MODE + 2

[lfo]
    taptempo = _CLOCK_DIV_OUT
    bipolar = 1
    sine = O8

# -------------------------------------------------
# reset
# -------------------------------------------------

[pot]
    pot = P3.2
    outputscale = 8
    notch = 0
    output = _RESET_SEQUENCER_POT

[sequencer]
    clock = _CLOCK_DIV_OUT
    reset = G1.8
    steps = _RESET_SEQUENCER_POT
    pitch1 = 0
    pitch2 = 0
    pitch3 = 0
    pitch4 = 0
    pitch5 = 0
    pitch6 = 0
    pitch7 = 0
    pitch8 = 0
    cv1 = 0
    cv2 = 0
    cv3 = 0
    cv4 = 0
    cv5 = 0
    cv6 = 0
    cv7 = 0
    cv8 = 0
    gate1 = 1
    gate2 = 0
    gate3 = 0
    gate4 = 0
    gate5 = 0
    gate6 = 0
    gate7 = 0
    gate8 = 0
    gateoutput = G11
